{"version":3,"sources":["lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","send","ActionButton","props","tweet","action","didPerformAction","likes","actionDisplay","display","className","handleActionBackendEvent","console","log","onClick","event","preventDefault","tweetId","id","apiTweetAction","type","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","path","window","location","pathname","idRegex","match","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetList","tweetsInit","setTweetInit","tweets","setTweets","tweetDidSet","setTweetDidsSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","items","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newvalue","current","value","ref","required","placeholder","TweetConponents","setnewTweets","canTweet","tempNewTweet","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render_id","getElementById","ReactDOM","render","createElement","our_id","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.7053a667.chunk.js","sourcesContent":["\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  var url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = 'json'\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url)\n  xhr.setRequestHeader('Content-Type', 'application/json')\n  if (csrftoken) {\n    // xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest')\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n    xhr.setRequestHeader('X-CSRFToken', csrftoken)\n  }\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = (e) => {\n    // calling callback we defind this or passig a arg  \n    callback({ 'message': 'the message was an error' }, 400)\n  }\n\n  xhr.send(jsonData)\n}\n\n","\nimport {apiTweetAction } from './lookup'\n\nexport function ActionButton(props) {\n    const { tweet, action, didPerformAction } = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const actionDisplay = action.display ? action.display : \"Action\"\n    const display = action.display === 'likes' ? `${likes} ${action.display}` : actionDisplay\n    const className = props.className ? props.className : 'btn shadow-sm btn-primary'\n\n\n    const handleActionBackendEvent = (response, status) => {\n        console.log(\"response \", response, \"status \", status)\n        if ((status === 200 || status === 201) && didPerformAction) {\n            didPerformAction(response, status)\n        }\n    }\n\n\n    // this is function like lamda in python\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n    }\n\n    return <button className={className} onClick={handleClick} >   {display}   </button>\n}","import { backendLookup } from '../lookup'\n\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweet/create/\", callback, { content: newTweet })\n}\n\n\nexport function apiTweetAction(tweetId,action, callback) {\n    const data = { id : tweetId , action : action }\n    backendLookup(\"POST\", \"/tweet/action/\", callback, data)\n}\n\n\nexport function apiTweetDetail(tweetId ,callback) {\n\n    backendLookup(\"GET\", `/tweet/${tweetId}/`, callback)\n}\n\n\n\n\n// xhr ajax request \nexport function apiTweetList(username,callback) {\n    let endpoint  = \"/tweet/\"\n    if (username){\n        endpoint = `/tweet/?username=${username}`\n    }\n    backendLookup(\"GET\",endpoint, callback)\n}\n\n","import React, { useState } from 'react'\nimport { ActionButton } from './buttons'\n\nexport function ParentTweet(props) {\n    const { tweet } = props\n    return tweet.parent ? <div className='row'>\n        <div className=\"bg-light mx-auto col-11\">\n            <span className=\"mb-2 text-muted small \">Retweet</span>\n            <Tweet hideActions className={' '} tweet={tweet.parent} />\n        </div>\n    </div> : null\n}\n\n\n// this fuction we calling where we rendering or where we calling map function AS A Tweet tag\n// THIS FUNCTION SHOWING OUR DATA IN PROPER WAY\n// and here if you call a function as like a tag you must need use props\nexport function Tweet(props) {\n    const { tweet, didRetweet, hideActions } = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n\n\n    const path = window.location.pathname\n    const idRegex = /(?<tweetid>\\d+)/\n    const match = path.match(idRegex)\n    const urlTweetId = match ? match.groups.tweetid : -1\n\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n        console.log('newAction tweet ', newActionTweet, status)\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n        } else if (status === 201) {\n            if (didRetweet) {\n                didRetweet(newActionTweet)\n            }\n        }\n    }\n    // this is check if class exists then return same else we given  \n    // this is a ternary opreator or you can say  ? same like java \n    const className = props.className ? props.className : 'col-10 mx-auto p-3 col-md-6'\n    return <div className={className}>\n        <div>\n            <p>{tweet.content} - {tweet.id} </p>\n            <ParentTweet tweet={tweet} />\n        </div>\n        <div className=\"btn btn-group\" >\n            {/* we create a fregment for only action buttoons */}\n            {(actionTweet && hideActions !== true) && <React.Fragment>\n                <ActionButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"like\", display: 'likes' }} />\n                <ActionButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: 'unlike' }} />\n                <ActionButton tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: 'retweet' }} />\n            </React.Fragment>}\n\n            {isDetail === true ? null : < button className=' btn btn-sm btn-light border-primary' onClick={handleLink}> view </button>}\n        </div>\n    </div>\n}\n","import React, { useEffect, useState } from 'react'\nimport { apiTweetList } from './lookup'\nimport {Tweet} from './detail'\n\n\n\n\nexport function TweetList(props) {\n    // use effect take a function as a argument\n    const [tweetsInit, setTweetInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetDidSet, setTweetDidsSet] = useState(false)\n    // we going another useEffect for newTweet\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n        if (tweetDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setTweetInit(response)\n                    setTweetDidsSet(true)\n                }\n                else {\n                    alert('an error accur')\n                }\n            }\n\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n\n    }, [tweetsInit, tweetDidSet, setTweetDidsSet, props.username])\n    // setTweetInit([...newTweets].concat(tweetInit))\n\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetInit(updateTweetsInit)\n\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n    return tweets.map((items, index) => {\n        return <Tweet tweet={items}\n            didRetweet={handleDidRetweet}\n            className='py-5 px-5 mt-1 border-radius shadow-sm  bg-white text-dark'\n            key={`${index}-{item.id}`} />\n    })\n\n}\n","import React from 'react'\nimport { apiTweetCreate } from './lookup'\n\nexport function TweetCreate(props) {\n    const textAreaRef = React.createRef()\n    const { didTweet } = props\n\n    // callback\n    // change this to server side call\n    const handleBackendUpdate = (response, status) => {\n        // backend response api request handler\n        if (status === 201) {\n            // you can use pust but we get newest tweets on top so using unshift \n            didTweet(response)\n        }\n        else {\n            alert(\"data not sended to backend something went wrong\")\n        }\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        // this is will all tempnewTweet in newTweets which allready a var\n        const newvalue = textAreaRef.current.value\n        // backend response api request\n        apiTweetCreate(newvalue, handleBackendUpdate)\n        textAreaRef.current.value = ''\n    }\n    return <div className='container'>\n        <div className=\"container mt-5 p-2\">\n            <h1 className='offset-1' > Welcome on react tweets </h1>\n        </div>\n\n        {/* this is the main concept */}\n        <div className={props.className}>\n            <form onSubmit={handleSubmit} >\n                <textarea ref={textAreaRef} required={true} className='form-control' placeholder=' tweet here....' ></textarea>\n                <button type='submit' className='btn btn-primary my-3'> tweet </button>\n            </form>\n        </div>\n        {/* {...props } is pass self props */}\n    </div>\n\n}\n","import React, { useEffect,useState } from 'react'\nimport { TweetList } from './list'\nimport {TweetCreate} from './create'\nimport {apiTweetDetail} from './lookup'\nimport { Tweet } from './detail'\n\n\n\n// this function have username and can tweet beacuse we have mantion in api class\n// this function showing our data on react page \nexport function TweetConponents(props) {\n    const [newTweets, setnewTweets] = useState([])\n    // change this to server side call\n    const canTweet = props.canTweet === \"false\" ? false : true\n\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweet = [...newTweets]\n        // backend response api request handler\n        // you can use pust but we get newest tweets on top so using unshift \n        tempNewTweet.unshift(newTweet)\n        setnewTweets(tempNewTweet)\n    }\n    return <div className='container'>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-10 offset-1' ></TweetCreate>}\n        {/*  {...props } is pass self props  */}\n        <TweetList newTweets={newTweets} {...props} />\n    </div>\n}\n\n\nexport function TweetDetailComponent(props){\n    const {tweetId} = props\n    const [didLookup,setDidLookup] = useState(false)\n    const [tweet,setTweet] = useState(null)\n\n    const handleBackendLookup = (response,status)=>{\n        console.log(\"the status : \",response,status)\n        if (status === 200){\n            setTweet(response)\n        }else{\n            alert(\"there is a error to finding your tweet\")\n        }\n    }\n\n    useEffect(()=>{\n        if (didLookup === false){\n            apiTweetDetail(tweetId,handleBackendLookup)\n            setDidLookup(true)\n        }\n    },[didLookup,setDidLookup,tweetId])\n\n    return tweet === null ? null : <Tweet tweet = {tweet} className={props.className}></Tweet>\n}","import React from 'react'\n\nimport { TweetConponents } from './tweets'\n\n\n// started on 2 dec 2020 -- naresh swami\nfunction App() {\n  return (\n        <div className=\"container mt-5 p-5 \">\n          <h1 className='offset-1' > Welcome on react tweets </h1>\n          <TweetConponents />\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { TweetConponents, TweetDetailComponent } from './tweets';\n\n\n\nconst render_id = document.getElementById('root')\n\nif (render_id) {\n  ReactDOM.render(<App />, render_id);\n}\n\nconst e = React.createElement\nconst our_id = document.getElementById('tweetme-2')\nif (our_id) {\n  ReactDOM.render(\n    e(TweetConponents, our_id.dataset), our_id)\n}\n\nconst tweetDetailElemenet = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElemenet.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset), container)\n\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}